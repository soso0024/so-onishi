---
import Layout from '../layouts/Layout.astro';
import SkillCard from '../components/SkillCard.astro';


// SVG icons for the components
const backendIcon = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
  <path stroke-linecap="round" stroke-linejoin="round" d="M5.25 14.25h13.5m-13.5 0a3 3 0 0 1-3-3m3 3a3 3 0 1 0 0 6h13.5a3 3 0 1 0 0-6m-16.5-3a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3m-19.5 0a4.5 4.5 0 0 1 .9-2.7L5.737 5.1a3.375 3.375 0 0 1 2.7-1.35h7.126c1.062 0 2.062.5 2.7 1.35l2.587 3.45a4.5 4.5 0 0 1 .9 2.7m0 0a3 3 0 0 1-3 3m0 3h.008v.008h-.008v-.008Zm0-6h.008v.008h-.008v-.008Zm-3 6h.008v.008h-.008v-.008Zm0-6h.008v.008h-.008v-.008Z" />
</svg>`;

const toolsIcon = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
  <path stroke-linecap="round" stroke-linejoin="round" d="M11.42 15.17 17.25 21A2.652 2.652 0 0 0 21 17.25l-5.877-5.877M11.42 15.17l2.496-3.03c.317-.384.74-.626 1.208-.766M11.42 15.17l-4.655 5.653a2.548 2.548 0 1 1-3.586-3.586l6.837-5.63m5.108-.233c.55-.164 1.163-.188 1.743-.14a4.5 4.5 0 0 0 4.486-6.336l-3.276 3.277a3.004 3.004 0 0 1-2.25-2.25l3.276-3.276a4.5 4.5 0 0 0-6.336 4.486c.091 1.076-.071 2.264-.904 2.95l-.102.085m-1.745 1.437L5.909 7.5H4.5L2.25 3.75l1.5-1.5L7.5 4.5v1.409l4.26 4.26m-1.745 1.437 1.745-1.437m6.615 8.206L15.75 15.75M4.867 19.125h.008v.008h-.008v-.008Z" />
</svg>`;

const cloudIcon = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
  <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15a4.5 4.5 0 0 0 4.5 4.5H18a3.75 3.75 0 0 0 1.332-7.257 3 3 0 0 0-3.758-3.848 5.25 5.25 0 0 0-10.233 2.33A4.502 4.502 0 0 0 2.25 15Z" />
</svg>`;

const githubIcon = `<svg viewBox="0 0 24 24" class="w-6 h-6" fill="currentColor">
  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
</svg>`;

const zennIcon = `<svg role="img" viewBox="0 0 24 24" class="w-6 h-6" fill="currentColor">
  <path d="M.264 23.771h4.984c.264 0 .498-.147.645-.352L19.614.874c.176-.293-.029-.645-.381-.645h-4.72c-.235 0-.44.117-.557.323L.03 23.361c-.088.176.029.41.234.41zM17.445 23.419l6.479-10.408c.205-.323-.029-.733-.41-.733h-4.691c-.176 0-.352.088-.44.235l-6.655 10.643c-.176.264.029.616.352.616h4.779c.234-.001.468-.118.586-.353z"/>
</svg>`;

const linkedinIcon = `<svg viewBox="0 0 24 24" class="w-6 h-6" fill="currentColor">
  <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
</svg>`;

const frontendIcon = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
  <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 7.5l3 2.25-3 2.25m4.5 0h3m-9 8.25h13.5A2.25 2.25 0 0021 18V6a2.25 2.25 0 00-2.25-2.25H5.25A2.25 2.25 0 003 6v12a2.25 2.25 0 002.25 2.25z" />
</svg>`;

const databaseIcon = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
  <path stroke-linecap="round" stroke-linejoin="round" d="M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125" />
</svg>`;

const roboticsIcon = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
  <path stroke-linecap="round" stroke-linejoin="round" d="M15.59 14.37a6 6 0 01-5.84 7.38v-4.8m5.84-2.58a14.98 14.98 0 006.16-12.12A14.98 14.98 0 009.631 8.41m5.96 5.96a14.926 14.926 0 01-5.841 2.58m-.119-8.54a6 6 0 00-7.381 5.84h4.8m2.581-5.84a14.927 14.927 0 00-2.58 5.84m2.699 2.7c-.103.021-.207.041-.311.06a15.09 15.09 0 01-2.448-2.448 14.9 14.9 0 01.06-.312m-2.24 2.39a4.493 4.493 0 00-1.757 4.306 4.493 4.493 0 004.306-1.758M16.5 9a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z" />
</svg>`;
---

<Layout title="So Onishi - Portfolio">
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
    <!-- Hero Section -->
    <section class="text-center mb-16">
      <h1 class="text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4" data-i18n="hero.name"></h1>
      <div class="max-w-4xl mx-auto">
        <p class="text-lg text-gray-700 dark:text-gray-300 leading-relaxed" data-i18n="hero.description"></p>
      </div>
    </section>

    <!-- About Section -->
    <section id="about" class="mb-16">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-6" data-i18n="about.title"></h2>
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
      <p class="text-gray-700 dark:text-gray-300 mb-4 font-bold text-lg" data-i18n="about.passion"></p>
      <div class="mb-6">
        <h3 class="font-semibold mb-4 dark:text-gray-200" data-i18n="about.experience.title"></h3>
        <div class="space-y-6 max-h-96 overflow-y-auto" id="experience-list">
        <!-- Experience items will be populated by JavaScript -->
        </div>
      </div>
      </div>
    </section>

    <!-- News Section -->
    <section id="news" class="mb-16">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-6" data-i18n="news.title"></h2>
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 overflow-y-auto max-h-48">
        <ul class="space-y-4" id="news-list">
          <!-- News items will be populated by JavaScript -->
        </ul>
      </div>
    </section>

    <!-- Research Section -->
    <section id="research" class="mb-16">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-6" data-i18n="research.title"></h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="research-list">
        <!-- Research items will be populated by JavaScript -->
      </div>
    </section>

    <!-- Projects Section -->
    <section id="projects" class="mb-16">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-6" data-i18n="projects.title"></h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="project-list">
        <!-- Project items will be populated by JavaScript -->
      </div>
    </section>

    <!-- Skills Section -->
    <section id="skills" class="mb-16">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-6" data-i18n="skills.title"></h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <SkillCard
          title="Frontend"
          skills={["HTML", "CSS", "JavaScript", "TypeScript", "Vue.js", "React"]}
          icon={frontendIcon}
        />
        <SkillCard
          title="Backend"
          skills={["Python", "Django", "Flask"]}
          icon={backendIcon}
        />
        <SkillCard
          title="Robotics"
          skills={["C", "C++", "ROS2"]}
          icon={roboticsIcon}
        />
        <SkillCard
          title="Database"
          skills={["SQLite", "Supabase"]}
          icon={databaseIcon}
        />
        <SkillCard
          title="Cloud"
          skills={["AWS", "GCP", "Terraform", "LocalStack"]}
          icon={cloudIcon}
        />
        <SkillCard
          title="Tools"
          skills={["Git", "GitHub", "VS Code", "Cursor"]}
          icon={toolsIcon}
        />
      </div>
    </section>

    <!-- Contact Section -->
    <section id="contact" class="mb-16">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-gray-100 mb-6" data-i18n="contact.title"></h2>
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6">
        <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
          <a href="https://github.com/soso0024" 
             class="flex items-center gap-3 p-4 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-primary dark:hover:border-primary hover:text-primary dark:hover:text-primary transition-colors"
             target="_blank">
            <span class="text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary" set:html={githubIcon} />
            <div>
              <div class="font-medium dark:text-gray-200" data-i18n="contact.github.title"></div>
              <div class="text-sm text-gray-500 dark:text-gray-400" data-i18n="contact.github.description"></div>
            </div>
          </a>
          <a href="https://zenn.dev/os515" 
             class="flex items-center gap-3 p-4 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-primary dark:hover:border-primary hover:text-primary dark:hover:text-primary transition-colors"
             target="_blank">
            <span class="text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary" set:html={zennIcon} />
            <div>
              <div class="font-medium dark:text-gray-200" data-i18n="contact.zenn.title"></div>
              <div class="text-sm text-gray-500 dark:text-gray-400" data-i18n="contact.zenn.description"></div>
            </div>
          </a>
          <a href="https://www.linkedin.com/in/so-onishi/" 
             class="flex items-center gap-3 p-4 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-primary dark:hover:border-primary hover:text-primary dark:hover:text-primary transition-colors"
             target="_blank">
            <span class="text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary" set:html={linkedinIcon} />
            <div>
              <div class="font-medium dark:text-gray-200" data-i18n="contact.linkedin.title"></div>
              <div class="text-sm text-gray-500 dark:text-gray-400" data-i18n="contact.linkedin.description"></div>
            </div>
          </a>
        </div>
      </div>
    </section>
  </main>

  <script>
    import { translations } from '../i18n/translations';

    function getNestedValue(obj: any, path: string): string {
      return path.split('.').reduce((current, key) => current?.[key], obj) as string;
    }

    function updateExperienceSection(lang: string) {
      const experienceListElement = document.getElementById('experience-list');
      if (!experienceListElement) return;

      const experienceItems = translations[lang].about.experience.items;
      experienceListElement.innerHTML = experienceItems.map(item => `
        <div class="border-l-2 border-primary dark:border-blue-400 pl-4">
          <div class="flex justify-between items-start mb-1">
            <div>
              <h4 class="font-medium text-gray-900 dark:text-gray-100">${item.role}</h4>
              <p class="text-gray-600 dark:text-gray-400">${item.company}</p>
            </div>
            <span class="text-sm text-gray-500 dark:text-gray-400">${item.period}</span>
          </div>
          <p class="text-gray-600 dark:text-gray-400">${item.description}</p>
        </div>
      `).join('');
    }

    function updateResearchSection(lang: string) {
      const researchListElement = document.getElementById('research-list');
      if (!researchListElement) return;

      const researchItems = translations[lang].research.items;
      researchListElement.innerHTML = researchItems.map(item => `
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 transition-shadow hover:shadow-lg">
          <h3 class="text-xl font-semibold mb-2 dark:text-gray-200">${item.title}</h3>
          <p class="text-gray-700 dark:text-gray-300 mb-2">${item.description}</p>
          <div class="flex flex-wrap justify-between items-center">
            <span class="text-sm text-gray-500 dark:text-gray-400">${item.period}</span>
            <div class="flex flex-col space-y-2"> 
              ${item.github ? `
                <a
                  href="${item.github}"
                  class="text-primary hover:text-primary-dark dark:text-blue-400 dark:hover:text-blue-300"
                  target="_blank"
                  data-i18n="research.viewOnGithub"
                >GitHub</a>
              ` : ''}
              ${item.conference ? `
                <a
                  href="${item.conference}"
                  class="text-primary hover:text-primary-dark dark:text-blue-400 dark:hover:text-blue-300"
                  target="_blank"
                  data-i18n="research.viewConference"
                >Conference</a>
              ` : ''}
            </div>
          </div>
        </div>
      `).join('');
    }

    function updateNewsSection(lang: string) {
      const newsListElement = document.getElementById('news-list');
      if (!newsListElement) return;

      const newsItems = translations[lang].news.items;
      newsListElement.innerHTML = newsItems.map(item => `
        <li class="flex items-start">
          <span class="text-gray-700 dark:text-gray-300 mr-2">${item.description.slice(-2)}</span>
          <div>
            <div class="font-medium text-gray-900 dark:text-gray-100">${item.date}</div>
            <div class="text-gray-600 dark:text-gray-400">${item.description.slice(0, -2)}</div>
          </div>
        </li>
      `).join('');
    }

    function updateProjectSection(lang) {
    const projectListElement = document.getElementById('project-list');
    if (!projectListElement) return;

    const projectItems = translations[lang].projects.items;
    projectListElement.innerHTML = projectItems.map(item => `
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 transition-shadow hover:shadow-lg relative">
        <h3 class="text-xl font-semibold mb-2 dark:text-gray-200">${item.title}</h3>
        <p class="text-gray-700 dark:text-gray-300 mb-2">${item.description}</p>
        <a
          href="${item.github}"
          class="text-primary hover:text-primary-dark dark:text-blue-400 dark:hover:text-blue-300 absolute bottom-4 right-4"
          target="_blank"
        >${translations[lang].projects.viewOnGithub}</a>
        </div>
      `).join('');
    }

    function updateContent(lang: string) {
      const elements = document.querySelectorAll('[data-i18n]');
      elements.forEach((element) => {
        const key = element.getAttribute('data-i18n');
        if (key) {
          const value = getNestedValue(translations[lang], key);
          if (element instanceof HTMLElement) {
            element.textContent = value;
          }
        }
      });

      // Update experience, research, news, and project sections separately since they require special handling
      updateExperienceSection(lang);
      updateResearchSection(lang);
      updateNewsSection(lang);
      updateProjectSection(lang);
    }

    // Initialize with stored language or default to English
    const initialLang = localStorage.getItem('lang') || 'en';
    updateContent(initialLang);

    // Listen for language changes
    document.addEventListener('languageChange', ((event: CustomEvent) => {
      updateContent(event.detail.lang);
    }) as EventListener);
  </script>
</Layout>
