---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="So Onishi's Portfolio" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/muscle-svgrepo-com.svg" />
    <title>{title}</title>
  </head>
  <body class="bg-gray-50 dark:bg-gray-900">
    <nav class="bg-white dark:bg-gray-800 shadow-sm fixed w-full top-0 z-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16">
          <div class="flex items-center">
            <!-- <a href="/" class="text-xl font-bold text-gray-900 dark:text-white">🤖 🏀 🍖</a> -->
          </div>
          <!-- Mobile menu button -->
          <button
            type="button"
            class="md:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary"
            aria-controls="mobile-menu"
            aria-expanded="false"
            id="mobile-menu-button"
          >
            <span class="sr-only">Open main menu</span>
            <!-- Hamburger icon -->
            <svg
              class="block h-6 w-6"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              aria-hidden="true"
              id="hamburger-icon"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16M4 12h16M4 18h16"
              />
            </svg>
            <!-- Close icon -->
            <svg
              class="hidden h-6 w-6"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              aria-hidden="true"
              id="close-icon"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M6 18L18 6M6 6l12 12"
              />
            </svg>
          </button>
          <!-- Desktop menu -->
          <div class="hidden md:flex items-center space-x-4">
            <a href="#about" class="text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary" data-nav-about>About</a>
            <a href="#news" class="text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary" data-nav-news>News</a>
            <a href="#projects" class="text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary" data-nav-projects>Projects</a>
            <a href="#skills" class="text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary" data-nav-skills>Skills</a>
            <a href="#contact" class="text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary" data-nav-contact>Contact</a>
            <button
              id="langToggle"
              class="px-4 py-1 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-md transition-colors"
            >
              日本語 🇯🇵
            </button>
            <button
              id="darkModeToggle"
              class="p-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-md transition-colors"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden dark:block" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
              </svg>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 dark:hidden" viewBox="0 0 20 20" fill="currentColor">
                <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
              </svg>
            </button>
          </div>
        </div>
      </div>

      <!-- Mobile menu -->
      <div class="hidden md:hidden" id="mobile-menu">
        <div class="px-2 pt-2 pb-3 space-y-1 bg-white dark:bg-gray-800">
          <a href="#about" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary hover:bg-gray-100 dark:hover:bg-gray-700" data-nav-about-mobile>About</a>
          <a href="#news" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary hover:bg-gray-100 dark:hover:bg-gray-700" data-nav-news-mobile>News</a>
          <a href="#projects" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary hover:bg-gray-100 dark:hover:bg-gray-700" data-nav-projects-mobile>Projects</a>
          <a href="#skills" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary hover:bg-gray-100 dark:hover:bg-gray-700" data-nav-skills-mobile>Skills</a>
          <a href="#contact" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:text-primary dark:hover:text-primary hover:bg-gray-100 dark:hover:bg-gray-700" data-nav-contact-mobile>Contact</a>
          <button
            id="langToggleMobile"
            class="w-full text-left px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-primary hover:bg-gray-100 dark:text-gray-300 dark:hover:text-primary dark:hover:bg-gray-700"
          >
            日本語 🇯🇵
          </button>
        </div>
      </div>
    </nav>
    <!-- Add padding to account for fixed header -->
    <div class="pt-16">
      <slot />
    </div>

    <script>
      let currentLang = localStorage.getItem('lang') || 'en';
      const mobileMenuButton = document.getElementById('mobile-menu-button');
      const mobileMenu = document.getElementById('mobile-menu');
      const hamburgerIcon = document.getElementById('hamburger-icon');
      const closeIcon = document.getElementById('close-icon');

      // Mobile menu toggle
      mobileMenuButton.addEventListener('click', () => {
        const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
        mobileMenuButton.setAttribute('aria-expanded', String(!isExpanded));
        mobileMenu.classList.toggle('hidden');
        hamburgerIcon.classList.toggle('hidden');
        closeIcon.classList.toggle('hidden');
      });

      // Close mobile menu when clicking on a link
      const mobileMenuLinks = mobileMenu.querySelectorAll('a');
      mobileMenuLinks.forEach(link => {
        link.addEventListener('click', () => {
          mobileMenu.classList.add('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
          hamburgerIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
        });
      });

      function updateLanguage() {
        const translations = {
          en: {
            about: "About",
            projects: "Projects",
            skills: "Skills",
            contact: "Contact",
            news: "News"
          },
          ja: {
            about: "自己紹介",
            projects: "プロジェクト",
            skills: "スキル",
            contact: "連絡先",
            news: "ニュース"
          }
        };

        // Update desktop navigation text
        document.querySelector('[data-nav-about]').textContent = translations[currentLang].about;
        document.querySelector('[data-nav-projects]').textContent = translations[currentLang].projects;
        document.querySelector('[data-nav-skills]').textContent = translations[currentLang].skills;
        document.querySelector('[data-nav-contact]').textContent = translations[currentLang].contact;
        document.querySelector('[data-nav-news]').textContent = translations[currentLang].news;

        // Update mobile navigation text
        document.querySelector('[data-nav-about-mobile]').textContent = translations[currentLang].about;
        document.querySelector('[data-nav-projects-mobile]').textContent = translations[currentLang].projects;
        document.querySelector('[data-nav-skills-mobile]').textContent = translations[currentLang].skills;
        document.querySelector('[data-nav-contact-mobile]').textContent = translations[currentLang].contact;
        document.querySelector('[data-nav-news-mobile]').textContent = translations[currentLang].news;

        // Update language toggle buttons text
        const langText = currentLang === 'en' ? '日本語 🇯🇵' : 'English 🇺🇸';
        document.getElementById('langToggle').textContent = langText;
        document.getElementById('langToggleMobile').textContent = langText;

        // Dispatch custom event for page content update
        document.dispatchEvent(new CustomEvent('languageChange', { detail: { lang: currentLang } }));
      }

      // Initialize language
      updateLanguage();

      // Add click handler to language toggle buttons
      const toggleLanguage = () => {
        currentLang = currentLang === 'en' ? 'ja' : 'en';
        localStorage.setItem('lang', currentLang);
        updateLanguage();
      };

      document.getElementById('langToggle').addEventListener('click', toggleLanguage);
      document.getElementById('langToggleMobile').addEventListener('click', toggleLanguage);

      // Dark mode toggle functionality
      const darkModeToggle = document.getElementById('darkModeToggle');
      const html = document.documentElement;

      function toggleDarkMode() {
        html.classList.toggle('dark');
        localStorage.setItem('darkMode', html.classList.contains('dark') ? 'enabled' : 'disabled');
      }

      // Check for saved dark mode preference or use system preference
      if (localStorage.getItem('darkMode') === 'enabled' ||
          (!('darkMode' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        html.classList.add('dark');
      }

      darkModeToggle.addEventListener('click', toggleDarkMode);
    </script>
  </body>
</html>
